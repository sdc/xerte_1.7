	<PG name="prob">		<SCR isFunc="1" name="setInitObjFnct"><![CDATA[// _______________ FUNCTION ___________________// SETS VALUE FOR initObj - THIS CAN INCLUDE THE NAMES OF VARIABLES// VARIABLE NAMES IN initObj SHOULD BE SURROUNDED BY { }initObj = initObj.substr(1,initObj.length-2);tempInit = '';tempNo = 0;// replaces variable names in initObj with valuefor (i=0;i<variables.length;i++){  varNo = 0;  counter = 0;  while (varNo < initObj.length){    // searches initObj for each variable    varPos = initObj.indexOf(markUpStart+variables[i]+markUpEnd,varNo);        if (varPos == -1) // none or no more found    {      tempInit += initObj.substring(tempNo,initObj.length);      varNo = initObj.length;      // will leave while loop now    } else { // variable found      varName = variables[i];      varValue = expression(varName, this);      tempInit += initObj.substring(tempNo,varPos) + varValue;      varNo = varPos+variables[i].length;      tempNo = varNo+2;    }  }    initObj = tempInit;  tempInit = "";  tempNo = 0;}initObj = '{' + initObj + '}';initObj = expression(initObj, this); ]]></SCR>		<SCR isFunc="1" name="sortLatexTxt"><![CDATA[// _______________ FUNCTION ___________________// SEARCHES FOR TEX TAGS (LaTeX) AND REPLACES ANY VARIABLE NAMES IN THEM WITH VALUE// VARIABLE NAMES IN TEXT SHOULD BE SURROUNDED BY { }copyText = textToCheck;tempNo = 0;latexNo = 0;while (latexNo<copyText.length){  // searches text for the LaTeX tag <tex>  latexPos = copyText.indexOf('<tex ',latexNo);  if (latexPos == -1) // none or no more found  {    latexNo = copyText.length;    // will leave while loop now  } else { // LaTeX tag found        for (j=0;j<variables.length;j++)    {      varNo = latexPos;            // searches for end of LaTeX tag      latexEnd = copyText.indexOf('>',latexPos);            while (varNo<latexEnd){	            // searches within LaTeX tag for each variable        varPos = copyText.indexOf(markUpStart+variables[j]+markUpEnd,varNo);            if (varPos == -1) // none or no more found        {          varNo = latexEnd;          // will leave while loop now            } else { // variable found                    varName = variables[j];              varValue = expression(varName, this);          varNo = varPos+variables[j].length;          tempNo = varNo+2;          copyText = copyText.substring(0,varPos) + varValue + copyText.substring(tempNo,copyText.length);                    // recalculate where end of tag is in case changed when var changed to value          latexEnd = copyText.indexOf('>',latexPos);        }      }      tempNo = 0;     }        latexNo = latexPos+1;  }}textToCheck = copyText;]]></SCR>		<SCR isFunc="1" name="sortOptionTxt"><![CDATA[// _______________ FUNCTION ___________________// SETS TEXT TO INCLUDE VALUES FOR ANY VARIABLES// variable names in text should be marked up with { }// the vars in normal text fields will automatically be replaced - this is for other text// e.g. multiple answer optionsansTxt = textToCheck;tempTxt = '';tempNo = 0;// replaces variable names in answer with valuefor (j=0;j<variables.length;j++){  varNo = 0;  counter = 0;  while (varNo < ansTxt.length){    // searches ansTxt for each variable    varPos = ansTxt.indexOf(markUpStart+variables[j]+markUpEnd,varNo);        if (varPos == -1) // none or no more found    {      tempTxt += ansTxt.substring(tempNo,ansTxt.length);      varNo = ansTxt.length;      // will leave while loop now    } else { // variable found      varName = variables[j];      varValue = expression(varName, this);      tempTxt += ansTxt.substring(tempNo,varPos) + varValue;      varNo = varPos+variables[j].length;      tempNo = varNo+2;    }  }    ansTxt = tempTxt;  tempTxt = "";  tempNo = 0;}textToCheck = ansTxt;]]></SCR>		<SCR name="getPageID"><![CDATA[// SET UP PAGE & GET INFO NEEDED FROM XML// recalculate variable valuesvaluesCalc = 0;getAlgebraInfo();pageIcon = icon.parentNode.clip();myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);pageIcon.templateData = myXML.toObject();myInfo = pageIcon.templateData.process[0];myExtXML = extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset];rootIcon.setTitleText(XMLdata.name);anim = expression(myInfo.swf, this);  // animation swfanimControls = myInfo.swfControl;     // visibility of play btns for animationinitObj = new String(myInfo.initObj); // initObj (setinitObjFnct() is called below too)// GETS INFO ABOUT TYPE OF STEP// there are 3 types of step that can be added:// plain text (step) / MCQ (mcqStep) / text entry (textQStep)totalStepNo = myExtXML.childNodes.length; // total step no.stepTypes = new Array();                  // type of stepcurrentStep = 0;for (i=0; i<totalStepNo; i++) {  stepTypes.push(myExtXML.childNodes[i].nodeName);}// GET INFO FOR PLAIN TEXT STEPSstepTxt = new Array();        // main panel text (step title + step text)calcTxt = new Array();        // calculation panel textclearPage = new Array();      // clear previous steps?calcClear = new Array();      // clear previous panel step?stepNo = myInfo.step.length;  // no. of simple text stepsif (stepNo != undefined){    for (i=0;i<stepNo;i++)  {    stepTxt.push('<b>'+myInfo.step[i].title+'</b>\n'+myInfo.step[i].txt);    textToCheck = stepTxt[i];    sortLatexTxt(); // calls function to replace any vars in LaTeX with values    stepTxt.splice(i,1,textToCheck);        calcTxt.push(myInfo.step[i].calc);    textToCheck = calcTxt[i];    sortLatexTxt(); // calls function to replace any vars in LaTeX with values    calcTxt.splice(i,1,textToCheck);        clearPage.push(myInfo.step[i].clearPrev);    calcClear.push(myInfo.step[i].clearCalc);  }    setInitObjFnct();}// GET INFO FOR TEXT ENTRY QUESTION STEPStextQTxt = new Array();            // text entry question texttextQAnswer = new Array();         // text entry answerstextQNo = myInfo.textQStep.length; // no. of text entry questionsif (textQNo != undefined){    for (i=0;i<textQNo;i++)  {    textQTxt.push(myInfo.textQStep[i].question);            textQAnswer.push(myInfo.textQStep[i].answer);    textToCheck = textQAnswer[i];    sortOptionTxt(); // calls function to replace any vars in answer with values    textQAnswer.splice(i,1,textToCheck);  }}// GET INFO FOR MCQ STEPSmcqTxt = new Array();           // MCQ question textmcqQNo = myInfo.mcqStep.length; // no. of mcq questionsif (mcqQNo != undefined){    for (i=0;i<mcqQNo;i++)  {    mcqTxt.push(myInfo.mcqStep[i].prompt);      }}if (myInfo.narration != undefined){  narration = myInfo.narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<SCR name="pageLayout"><![CDATA[// LAYOUT STUFF// window size (excluding top navigation) & panel sizeswindowWidth = 800;windowHeight = 515;indentX = 40;indentY = 30;panelW = (windowWidth-indentX*4)/2;panelH = windowHeight-(indentY*2);// position of notebook background imagebgIndentX = 20;bgIndentY = 16;bgImage.dropShadow(3,90,0x999999,50);// position of mainTxtmainTxtX = indentX;mainTxtH = 10;mainTxtW = panelW;initY1 = indentY; // this changes in the move on btn code as each section of text has different y value depending on height & position of previous one// position of panelTxtpanelTxtX = panelW+(indentX*3)+5;panelTxtY = indentY;panelTxtH = 175;panelTxtW = panelW;// position of animation & animation controlsanimX = panelW+(indentX*3);animY = indentY*2+panelTxtH-20;animBtnsY = animY+223;// swf controlsif (animControls == "No" || animControls == undefined){  icon.parentNode.getChildByID('controls').removeNode();}]]></SCR>		<DIS id="bgImage" name="bgImage" x="bgIndentX" y="bgIndentY" type="ext" url="templatePath + 'common/notebook.png'"><![CDATA[]]></DIS>		<COM y="animY" x="animX" id="animation" name="animation" url="anim" initObject="initObj" />		<COM y="animBtnsY" x="animX" id="controls" name="controls" url="templatePath + 'common/swfControls.swf'" initObject="initObj" />		<INT name="events" perpetual="1">			<RES name="swfPlayEvent" type="event" eventName="swfPlayEvent" icon="rootIcon" erase="0" exit="0">				<SCR name="eventScript"><![CDATA[// swf controls PLAY btn has been clicked// call function in animationswfAnim = pageIcon.XMLElement.getChildByName('animation').clip();swfAnim.playAll();]]></SCR>			</RES>			<RES name="swfBackEvent" type="event" eventName="swfBackEvent" icon="rootIcon" erase="0" exit="0">				<SCR name="eventScript"><![CDATA[// swf controls BACK btn has been clicked// call function in animationswfAnim = pageIcon.XMLElement.getChildByName('animation').clip();swfAnim.reset();]]></SCR>			</RES>			<RES name="animLoaded" type="event" eventName="onAnimLoad" icon="rootIcon" erase="0" exit="0">				<SCR name="eventScript"><![CDATA[// tells swf to play if 1st step is a plain text one and chgStep = 'Yes'// the code to do this is in the stepScript for all steps except the 1st// this has to be in a loadEvent as the animation hasn't loaded when it gets to stepScript codeif (stepTypes[0] == 'step' && myInfo.step[0].chgStep == 'Yes'){  // this only plays steps separately if there's no control bar  if (animControls == "No" || animControls == undefined) {    swfAnim = pageIcon.XMLElement.getChildByName('animation').clip();    swfAnim.forward();  }}]]></SCR>			</RES>		</INT>		<SCR name="makeSteps"><![CDATA[// CREATES NEW FW PAGES FOR EVERYTIME THE MAIN TEXT IS CLEARED// & NEW DECISION PAGE FOR EACH STEPif (totalStepNo>0){  if (icon.attributes.built != "true")  {    textStepCount = 0;    mcqStepCount = 0;    textQStepCount = 0;         currentFWPage = 0;        // creates the correct no. of FW pages    for (i=0;i<totalStepNo;i++)    {      if (stepTypes[i] == "step")      {        // sets up new FW page each time the page is cleared        if (clearPage[textStepCount] == "Yes" && i != 0)        {          icon.nextSibling.childNodes[currentFWPage].duplicate(1);          currentFWPage++;        }        textStepCount++;      }    }        currentFWPage = 0;    currentDecPage = 0;    textStepCount = 0;        // creates the correct no. of decision pages within the FW pages    for (j=0;j<totalStepNo;j++)    {      if (stepTypes[j] == "step")      {        // it's not the 1st step - a decision page for this already exists          if (j != 0)        {          // it's 1st in a new FW - a decision page for ths already exists          if (clearPage[textStepCount] == "Yes")          {            currentFWPage++;            currentDecPage = 0;           // decision icon needs duplicating          } else {            icon.nextSibling.childNodes[currentFWPage].firstChild.firstChild.duplicate(1);          }        }                textStepCount++;              } else if (j != 0)      {        icon.nextSibling.childNodes[currentFWPage].firstChild.firstChild.duplicate(1);      }      currentDecPage++;    }        currentFWPage = 0;    currentDecPage = 0;    textStepCount = 0;          // sets attributes for pages - step type & no. (of that type)    for (k=0;k<totalStepNo;k++)    {      myPage = icon.nextSibling.childNodes[currentFWPage].firstChild.childNodes[currentDecPage];            // it's on the correct FW      if (myPage == undefined)      {        currentDecPage = 0;        currentFWPage++;        myPage = icon.nextSibling.childNodes[currentFWPage].firstChild.childNodes[currentDecPage];      }      myPage.attributes.stepType = stepTypes[k];      currentDecPage++;            if (myPage.attributes.stepType == "step")          {        myPage.attributes.stepTypeNo = textStepCount;        myPage.attributes.clearCalc = calcClear[textStepCount];        textStepCount++;      } else if (myPage.attributes.stepType == "textQStep")      {        myPage.attributes.stepTypeNo = textQStepCount;        myPage.attributes.clearCalc = "No";        textQStepCount++;      } else if (myPage.attributes.stepType == "mcqStep")      {        myPage.attributes.stepTypeNo = mcqStepCount;        myPage.attributes.clearCalc = "No";        mcqStepCount++;      }    }        for (l=0;l<currentFWPage+1;l++)    {      icon.nextSibling.firstChild.firstChild.attributes.id = 'steps'+l;    }        icon.attributes.built = "true";  }  } else { // no steps have been added  icon.nextSibling.firstChild.firstChild.firstChild.getChildByID('textQInt').removeNode();  icon.nextSibling.firstChild.firstChild.firstChild.getChildByID('mcqInt').removeNode();  icon.nextSibling.firstChild.firstChild.firstChild.getChildByID('stepInt').removeNode();  icon.nextSibling.firstChild.firstChild.firstChild.getChildByID('refreshInt').removeNode();  myMainTxt = "No steps have been added to this page.";}myCalcTxt = "";]]></SCR>		<FW id="stepFW" name="stepFW">			<PG name="stepPage">				<DEC name="steps" repeat="all" branch="sequence" pause="1" erase="0" eraseOnExit="0">					<PG name="protoStep">						<SCR name="stepScript"><![CDATA[// sorts out icons in step depending on step typemyStepNo = icon.parentNode.attributes.stepTypeNo;// PLAIN TEXT STEPif (icon.parentNode.attributes.stepType == 'step'){  icon.parentNode.getChildByID('textQInt').removeNode();  icon.parentNode.getChildByID('mcqInt').removeNode();  myMainTxt = stepTxt[myStepNo];    // clears calc text or adds to bottom of previous  if (icon.parentNode.attributes.clearCalc == 'Yes' || myCalcTxt == '')  {    myCalcTxt = calcTxt[myStepNo];  } else if (calcTxt[myStepNo] != '') {    myCalcTxt += "\n\n" + calcTxt[myStepNo];  }    // tells swf to move on  if (myInfo.step[myStepNo].chgStep == 'Yes')  {    // this only plays steps separately if there's no control bar    if (animControls == "No" || animControls == undefined) {      swfAnim = pageIcon.XMLElement.getChildByName('animation').clip();      swfAnim.forward();    }  }    // controls which btns are visible (fwd / back)  if (icon.parentNode.index() == icon.parentNode.parentNode.lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()){    // last step - only show 'refresh' btn    icon.findParentByName('protoStep').getChildByID('refreshInt').firstChild.attributes.visible = 1;    icon.parentNode.getChildByID('stepInt').removeNode();  } else {    // only show 'move on' btn    icon.parentNode.getChildByID('refreshInt').removeNode();  }  // TEXT ENTRY QUESTION STEP} else if (icon.parentNode.attributes.stepType == "textQStep"){  //icon.parentNode.getChildByID('panelTxt').removeNode();  icon.parentNode.getChildByID('stepInt').removeNode();  icon.parentNode.getChildByID('mcqInt').removeNode();  myMainTxt = textQTxt[myStepNo];  attempts = 0;    // last step  if (icon.parentNode.index() == icon.parentNode.parentNode.lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()) {  } else {    icon.parentNode.getChildByID('refreshInt').removeNode();  }  // MCQ STEP} else if (icon.parentNode.attributes.stepType == "mcqStep"){  icon.parentNode.getChildByID('textQInt').removeNode();  icon.parentNode.getChildByID('stepInt').removeNode();  myMainTxt = mcqTxt[myStepNo];    optionTracking = new Array();    correctAnswers = new Array();    myOptionNo = myInfo.mcqStep[myStepNo].option.length;    // create answer options  if (icon.attributes.built != "true"){    icon.parentNode.getChildByID('mcqInt').childNodes[1].duplicate(myOptionNo - 2);    icon.attributes.built = "true";  }    //multi answer?  if (myInfo.mcqStep[myStepNo].type == 'Multiple Answer'){    for (i=0; i<myOptionNo; i++){      icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.type="checkBox";    }  }    // gives answer options a unique name and stores feedback, txt & whether correct as attributes  for (i=0; i<myOptionNo; i++){    optionTracking.push(0);    icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.rs = 'option'+i;    if (myInfo.mcqStep[myStepNo].option[i].correct == 'true'){      correctAnswers.push(1);      icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.correct = 1;    } else {      correctAnswers.push(0);      icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.correct = 0;    }    myAnswer = myInfo.mcqStep[myStepNo].option[i].text;    textToCheck = myAnswer;    sortOptionTxt(); // calls function to replace any vars in answer with values    myAnswer = textToCheck;        icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.txt = myAnswer;    myFeedback = myInfo.mcqStep[myStepNo].option[i].feedback;    icon.parentNode.getChildByID('mcqInt').childNodes[i].attributes.feedback = myFeedback;  }    // last step  if (icon.parentNode.index() == icon.parentNode.parentNode.lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()) {  } else {    icon.parentNode.getChildByID('refreshInt').removeNode();  }}// removes the calculation text from the previous step - otherwise they pile up on top of one anothericon.parentNode.previousSibling.getChildByName('panelTxt').clip().removeMovieClip();]]></SCR>						<DIS embedVars="1" id="mainTxt" name="mainTxt" x="mainTxtX" y="initY1" w="mainTxtW" h="mainTxtH" type="text"><![CDATA[{myMainTxt}]]></DIS>						<DIS scrolling="auto" embedVars="1" id="panelTxt" name="panelTxt" x="panelTxtX" y="panelTxtY" w="panelTxtW" h="panelTxtH" type="text"><![CDATA[{myCalcTxt}]]></DIS>						<INT id="textQInt" name="textQInt" perpetual="1">							<RES rs="te" name="textEntry" type="textEntry" x="indentX" y="initY1 + mainTxt._height + 10" w="200" h="100" phrase="*" scrolling="0" border="1" erase="1" exit="0">								<SCR name="checkAnswer"><![CDATA[ans = te.text.toLowerCase();answers = textQAnswer[myStepNo].toLowerCase().split(',');fb="";feedback.setText("");attempts++;if (answers.findValue(ans) != -1 || answers[0] == '*'){  te.border = false;  te.type = "dynamic";  Key.removeListener(te);  fb = "Correct";    if (icon.findParentByName('protoStep').index() == icon.findParentByName('steps').lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()){    icon.findParentByName('protoStep').getChildByID('refreshInt').firstChild.clip()._visible = true;  } else {    icon.parentNode.parentNode.childNodes[1].clip()._visible = true;  }} else {  fb = "Try again.";  if (attempts == myInfo.textQStep[myStepNo].attempts){    // attempts reached - show a hint    fb = myInfo.textQStep[myStepNo].hint;  }  if (attempts >= Number(myInfo.textQStep[myStepNo].attempts) + 1){    // still not right - Show the correct answer    te.text = answers[0];    fb = "The correct answer is shown.";    Key.removeListener(te);    if (icon.findParentByName('protoStep').index() == icon.findParentByName('steps').lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()){      icon.findParentByName('protoStep').getChildByID('refreshInt').firstChild.clip()._visible = true;    } else {      icon.parentNode.parentNode.childNodes[1].clip()._visible = true;    }  }}icon.parentNode.attributes.fbY = te._y + te._height + 10;]]></SCR>								<DIS embedVars="1" id="feedback" name="fb" x="indentX" y="te._y + te._height + 10" w="mainTxtW" h="10" type="text"><![CDATA[{fb}]]></DIS>							</RES>							<RES visible="0" swf="templatePath + 'common/button.swf'" name="btnNext" type="button" x="indentX" y="_ytile + 50" label="Move on" erase="1" exit="0">								<SCR name="btnScript"><![CDATA[icon.findParentByName('protoStep').clip().removeMovieClip();// moves to next page in decision iconif (icon.findParentByName('protoStep').index() != icon.findParentByName('steps').lastChild.index()){  icon.findParentByName('steps').clip().nextPage();} else {  // unless it has reached last page in dec icon - then it moves to next FW page  stepFW.nextPage();  initY1 = indentY;}]]></SCR>							</RES>						</INT>						<INT id="mcqInt" name="mcqInt" perpetual="1">							<RES w="mainTxtW" textColour="#000000" name="protoOption" type="radio" x="indentX" y="initY1 + mainTxt._height + 10" label="{icon.attributes.txt}" group="grp" erase="1" exit="0">								<SCR name="trackAnswers"><![CDATA[//track the questionif (myInfo.mcqStep[myStepNo].type == 'Single Answer'){  for (i=0; i<myOptionNo; i++){    optionTracking.splice(i,1,0);  }  optionTracking.splice(icon.parentNode.index(),1,1);} if (myInfo.mcqStep[myStepNo].type == 'Multiple Answer'){   if (icon.parentNode.clip().getValue() == true){    optionTracking.splice(icon.parentNode.index(),1,1);  } else {    optionTracking.splice(icon.parentNode.index(),1,0);  }} btnSubmit.setEnabled(true);]]></SCR>							</RES>							<RES w="mainTxtW" textColour="#000000" name="protoOption" type="radio" x="indentX" y="_ytile + 10" label="{icon.attributes.txt}" group="grp" erase="1" exit="0">								<SCR name="trackAnswers"><![CDATA[//track the questionif (myInfo.mcqStep[myStepNo].type == 'Single Answer'){  for (i=0; i<myOptionNo; i++){    optionTracking.splice(i,1,0);  }  optionTracking.splice(icon.parentNode.index(),1,1);} if (myInfo.mcqStep[myStepNo].type == 'Multiple Answer'){   if (icon.parentNode.clip().getValue() == true){    optionTracking.splice(icon.parentNode.index(),1,1);  } else {    optionTracking.splice(icon.parentNode.index(),1,0);  }} btnSubmit.setEnabled(true);]]></SCR>							</RES>							<RES enabled="0" rs="btnSubmit" swf="templatePath + 'common/button.swf'" name="btnSubmit" type="button" x="indentX" y="_ytile + 10" label="Check" erase="1" exit="0">								<SCR name="makeFeedback"><![CDATA[//single answer feedbackfb = "";for (i=0; i<myOptionNo; i++){  if (optionTracking[i] == 1){    fb += icon.findParentByID('mcqInt').childNodes[i].attributes.feedback + '\r\r';  }}// checks scorescore = 0;for (i=0; i<myOptionNo; i++){  if (correctAnswers[i] == optionTracking[i]) {    score++;  }}// all correct are selectedif (score == myOptionNo) {  if (icon.findParentByName('protoStep').index() == icon.findParentByName('steps').lastChild.index() && icon.findParentByName('stepPage').index() == icon.findParentByName('stepFW').lastChild.index()){    icon.nextSibling.attributes.y = btnSubmit._y;    icon.findParentByName('protoStep').getChildByID('refreshInt').firstChild.clip()._visible = true;  } else {    icon.parentNode.nextSibling.clip()._visible = true;  }  btnSubmit._visible = false;} else {  icon.nextSibling.attributes.y = btnSubmit._y+40;}]]></SCR>								<DIS id="feedback" embedVars="1" scrolling="auto" textColour="#000000" name="feedback" x="btnSubmit._x" y="btnSubmit._y + 40" w="mainTxtW" h="474 - (btnSubmit._y + btnSubmit._height) - 10" type="text"><![CDATA[{fb}]]></DIS>							</RES>							<RES visible="0" swf="templatePath + 'common/button.swf'" name="btnNext" type="button" x="btnSubmit._x" y="btnSubmit._y" label="Move on" erase="1" exit="0">								<SCR name="btnScript"><![CDATA[icon.findParentByName('protoStep').clip().removeMovieClip();// moves to next page in decision iconif (icon.findParentByName('protoStep').index() != icon.findParentByName('steps').lastChild.index()){  icon.findParentByName('steps').clip().nextPage();} else {  // unless it has reached last page in dec icon - then it moves to next FW page  stepFW.nextPage();  initY1 = indentY;}]]></SCR>							</RES>						</INT>						<INT id="stepInt" name="stepInt" perpetual="1">							<RES swf="templatePath + 'common/button.swf'" enabled="1" rs="fwdBtn" name="fwdBtn" type="button" x="indentX" y="initY1 + mainTxt._height + 10" label="Move on" erase="1" exit="0">								<SCR name="btnScript"><![CDATA[// moves to next page in decision iconif (icon.findParentByName('protoStep').index() != icon.findParentByName('steps').lastChild.index()){  icon.findParentByName('steps').clip().nextPage();  // sorts out y position of next piece of text  initY1 = mainTxt._y + mainTxt._height + 10;  } else {  // unless it has reached last page in decision icon - then it moves to next FW page  stepFW.nextPage();  initY1 = indentY;}icon.findParentByName('stepInt').clip().removeMovieClip();]]></SCR>							</RES>						</INT>						<INT id="refreshInt" name="refreshInt" perpetual="0">							<RES visible="0" swf="templatePath + 'common/button.swf'" name="refreshBtn" type="button" x="indentX" y="panelH + bgIndentY - 14" label="Refresh" erase="1" exit="0">								<SCR name="btnScript"><![CDATA[rootIcon.gotoPage(rootIcon.getPageIndex() - 1);]]></SCR>							</RES>						</INT>					</PG>				</DEC>			</PG>		</FW>	</PG>