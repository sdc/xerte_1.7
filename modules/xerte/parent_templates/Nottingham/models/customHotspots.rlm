	<PG title="Enter page title" repeat="1" w="txt._width" y="txt._y + txt._height + 60" x="txt._x" name="hotspotImage">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();if (extXML == undefined){  // Page Wizard  pageIcon.templateData = pageIcon.extXML.toObject();  pageIcon.templateData = pageIcon.templateData.pageWizard[0];} else {  // Toolkits  myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);  pageIcon.templateData = myXML.toObject();  rootIcon.setTitleText(templateData.learningObject[0].name);}hicol = pageIcon.templateData.hotspotImage[0].hicol;if (pageIcon.templateData.customHotspots[0].narration != undefined){  narration = pageIcon.templateData.customHotspots[0].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS h="474" w="760" tabIndex="-1" id="panel" name="panel" x="20" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DRW id="draw" name="drawing" x="40" y="40"><![CDATA[]]></DRW>		<SCR name="setData"><![CDATA[draw.setData(pageIcon.templateData.customHotspots[0]);draw.allowShapeEvents();hCol = pageIcon.templateData.customHotspots[0].highlightColour;lw = pageIcon.templateData.customHotspots[0].lineWidth;//prepare to draw the shapesif (pageIcon.templateData.customHotspots[0].showShapes == 'true'){  shapesHighlight = true;  shapeAlpha = 100;} else {  shapeAlpha = 0;  shapesHighlight = false;}//which typeif (pageIcon.templateData.customHotspots[0].interactivity == 'Hotspots'){  intType = 0;}if (pageIcon.templateData.customHotspots[0].interactivity == 'Labels'){  intType = 1;}if (pageIcon.templateData.customHotspots[0].interactivity == 'Show Me'){  intType = 2;}if (pageIcon.templateData.customHotspots[0].interactivity == 'MCQ'){  intType = 3;  shapeAlpha = 0;  shapesHighlight = false;  icon.parentNode.getChildByName("showShapes").removeNode();}for (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){    draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,0,0);  }}]]></SCR>		<DIS textColour="#333333" id="txt" name="text" x="500" y="40" w="260" h="10" type="text"><![CDATA[{pageIcon.templateData.customHotspots[0].text}]]></DIS>		<DIS textColour="#333333" id="fb" name="fb" x="txt._x" y="txt._y + txt._height + 20" w="260" h="10" type="text"><![CDATA[]]></DIS>		<INT name="showShapes" perpetual="1">			<RES name="onLoadImage" type="event" eventName="onLoadImage" icon="draw" erase="1" exit="0">				<INT id="shaper" name="showShapes" perpetual="1">					<RES rs="chkShapes" name="toggle" type="checkBox" x="40" y="25" label="Show Regions" erase="1" exit="0">						<SCR name="showShapes"><![CDATA[if (shapesHighlight == true){  shapesHighlight = false;  shapeAlpha = 0;} else {  shapeAlpha = 100;  shapesHighlight = true;}for (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){    draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,0,0);  }}]]></SCR>					</RES>				</INT>			</RES>		</INT>		<SCR name="setCheckBox"><![CDATA[if (shapesHighlight == true){  chkShapes.setCheckState(true);}]]></SCR>		<FW id="interactions" name="interactions">			<FW_ENT name="navigate">				<INT name="navigate" perpetual="0">					<RES name="0secs" type="timeLimit" secs="0" reset="0" erase="1" exit="0">						<SCR name="gotoPage"><![CDATA[interactions.gotoPage(intType);]]></SCR>					</RES>				</INT>			</FW_ENT>			<PG name="hotspots">				<DIS textColour="#333333" name="instructions" x="40" y="474" w="760" h="10" type="text"><![CDATA[<font size="10"><b>Explore the diagram. Click on the various parts to learn more.</b></font>]]></DIS>				<SCR name="makeAccessible"><![CDATA[draw.makeAccessible();]]></SCR>				<INT name="interaction" perpetual="0">					<RES name="onShapeRelease" type="event" eventName="onShapeRelease" icon="draw" erase="1" exit="0">						<SCR name="highlightInfo"><![CDATA[//hide previousfor (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image'){    draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,hCol,0);  }}draw.currentShape._alpha = 100;draw.currentShape.refreshShape(lw,hCol,100,hCol,40);//find any other shapes in this groupgrp = draw.currentShape.group;if (grp != ''){    for (i = 0; i < draw.shapes.length; i++){    if (draw.shapes[i].group == grp){      draw.shapes[i].refreshShape(lw,hCol,100,hCol,40);    }  }}fb.setText('<b>' + draw.currentShape.label + '</b><br>' + draw.currentShape.info);]]></SCR>						<SCR name="clear"><![CDATA[if (draw.currentShape.info != ''){  fb.beginFill(0xFFFFCC,100);  fb.lineStyle(1,0x333333,100);  fb.drawRect(0,0,260,474 - fb._y);}]]></SCR>					</RES>				</INT>			</PG>			<PG name="dragDropLabels">				<DIS textColour="#333333" name="instructions" x="40" y="474" w="760" h="10" type="text"><![CDATA[<font size="10"><b>Drag the pins for each label to the correct position in the diagram. You can re-position the labels if required.</b></font>]]></DIS>				<SCR name="makeLabels"><![CDATA[//only create one label for each group, so keep track of group namesgroups = new Object();labels = new Array();for (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){// && draw.shapes[i].label != ""){        addShape = true;    //we have shape - in a group?    if (draw.shapes[i].group != ''){      if (groups[draw.shapes[i].group] == undefined){ //we dont have this group yet        groups[draw.shapes[i].group] = true;      } else {        addShape = false;      }    }       if (addShape == true){      temp = new Object();        temp.label = draw.shapes[i].label;      temp.info = draw.shapes[i].info;      temp.shape = draw.shapes[i];      temp.group = draw.shapes[i].group;      labels.push(temp);    }  }}//create the interactionsif (icon.built != true){  icon.nextSibling.firstChild.duplicate(labels.length - 1);  icon.built = true;}]]></SCR>				<DEC id="mainDec" name="labels" repeat="all" branch="sequence" pause="0" erase="0" eraseOnExit="0">					<PG name="labels">						<DIS textColour="#333333" id="protoLabel" name="protoLabel" x="40 + Math.floor(icon.parentNode.index() % 4) * 180" y="390 + Math.floor(icon.parentNode.index() / 4) * 30" w="150" h="10" type="text"><![CDATA[{labels[icon.parentNode.index()].label}]]></DIS>						<DIS id="protoFlag" name="protoPin" x="protoLabel._x + 150" y="protoLabel._y" type="ext" url="templatePath + 'common/pin_blue.png'"><![CDATA[]]></DIS>						<SCR name="setup"><![CDATA[tempPG = icon.parentNode.clip();tempPG.label = protoLabel;tempPG.flag = protoFlag;protoLabel.beginFill(0x858585,100);protoLabel.drawRect(-1,-1,152,protoLabel._height + 2,3);protoLabel.beginFill(0xFFFFFF,100);protoLabel.drawRect(0,0,150,protoLabel._height,3);protoLabel.dropShadow(2,45,0x666666,100);protoFlag.makeDraggable(true, 0,0,800,514);protoLabel.makeDraggable(true, 0,0,800,514);protoLabel.group = labels[icon.parentNode.index()].group;nextY = protoLabel._y + protoLabel._height + 5]]></SCR>						<INT name="dragDropHandlers" perpetual="1">							<RES name="protoFlagStartDrag" type="event" eventName="onStartDrag" icon="protoFlag" erase="1" exit="0">								<SCR name="start"><![CDATA[tempPG = mainDec.pages[mainDec.getPageIndex()];]]></SCR>							</RES>							<RES name="protoFlagDrag" type="event" eventName="onDrag" icon="protoFlag" erase="1" exit="0">								<SCR name="update"><![CDATA[tempPG.clear();tempPG.lineStyle(lw,hCol,100);tempPG.moveTo(tempPG.flag._x + 8, tempPG.flag._y + 8);tempPG.lineTo(tempPG.label._x + tempPG.label._width / 2, tempPG.label._y + 5);]]></SCR>							</RES>							<RES name="protoFlagStopDrag" type="event" eventName="onStopDrag" icon="protoFlag" erase="1" exit="0">								<SCR name="stop"><![CDATA[//useful thingstempPG = mainDec.pages[mainDec.getPageIndex()];tempIC = tempPG.flag;tempLabel = tempPG.label;//did we hit a shape...success = false;for (i = 0; i < draw.shapes.length; i++){  //way around problems with hittest and the third param for shape outline if scalemode is not default  if (Stage.scaleMode == 'noScale'){    hit = draw.shapes[i].hitTest(tempIC._x + 8, tempIC._y + 8 + 64, true);  } else {    hit = draw.shapes[i].hitTest(tempIC);  }   if (hit == true){    if (draw.shapes[i].label == tempLabel.txt.text){       shapeIndex = i;       success = true;       break;    }        if (draw.shapes[i].group == tempLabel.group && tempLabel.group != ''){       shapeIndex = i;       success = true;       break;    }  }}//un-highlight other shapesfor (i = 0; i < draw.shapes.length; i++){  draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,0,0);}if (success != true){ //replace  tempPG.clear();  tempIC._x = tempLabel._x + 150;  tempIC._y = tempLabel._y;  tempPG.matched = false;} else {  //save the info  tempPG.info = draw.shapes[shapeIndex].info;  //highlight it  draw.shapes[shapeIndex]._alpha = 100;  draw.shapes[shapeIndex].refreshShape(lw,hCol,100,hCol,40);    //find any other shapes in this group    grp = draw.shapes[shapeIndex].group;  if (grp != ''){      for (i = 0; i < draw.shapes.length; i++){      if (draw.shapes[i].group == grp){        draw.shapes[i].refreshShape(lw,hCol,100,hCol,40);      }    }  }  //set info  fb.setText('<b>' + tempLabel.txt.text + '</b><br>' + tempPG.info);  fb.beginFill(0xFFFFCC,100);  fb.lineStyle(1,0x333333,100);  fb.drawRect(0,0,260,384 - fb._y);  //flag for info  tempPG.matched = true;}]]></SCR>							</RES>							<RES name="protoLabelStartDrag" type="event" eventName="onStartDrag" icon="protoLabel" erase="1" exit="0">								<SCR name="start"><![CDATA[tempPG = mainDec.pages[mainDec.getPageIndex()];tempLabel = tempPG.label;if (tempPG.matched == true){  //un-highlight other shapes  for (i = 0; i < draw.shapes.length; i++){    draw.shapes[i].refreshShape(0,0,0,0,0);  }  //highlight it  labels[mainDec.getPageIndex()].shape._alpha = 100;  labels[mainDec.getPageIndex()].shape.refreshShape(lw,hCol,100,hCol,40);    //find any other shapes in this group    grp = labels[mainDec.getPageIndex()].shape.group;  if (grp != ''){      for (i = 0; i < draw.shapes.length; i++){      if (draw.shapes[i].group == grp){        draw.shapes[i].refreshShape(lw,hCol,100,hCol,40);      }    }  }  fb.setText('<b>' + tempLabel.txt.text + '</b><br>' + tempPG.info);  fb.lineStyle(0,0x}]]></SCR>							</RES>							<RES name="protoLabelDrag" type="event" eventName="onDrag" icon="protoLabel" erase="1" exit="0">								<SCR name="update"><![CDATA[if (tempPG.matched == true){  tempPG.clear();  tempPG.lineStyle(lw,hCol,100);  tempPG.moveTo(tempPG.flag._x + 8, tempPG.flag._y + 8);  tempPG.lineTo(tempPG.label._x + tempPG.label._width / 2, tempPG.label._y + 5);} else {  tempPG.clear();  tempPG.flag._x = tempPG.label._x+150;  tempPG.flag._y = tempPG.label._y;}]]></SCR>							</RES>							<RES name="protoLabelStopDrag" type="event" eventName="onStopDrag" icon="protoLabel" erase="1" exit="0">								<SCR name="stop"><![CDATA[tempPG = mainDec.pages[mainDec.getPageIndex()];tempLabel = tempPG.label;]]></SCR>							</RES>							<RES name="protoFlagSetFocus" type="event" eventName="onSetFocus" icon="protoFlag" erase="1" exit="0">								<SCR name="[Untitled]"><![CDATA[debug("GOT IT");]]></SCR>							</RES>						</INT>					</PG>				</DEC>				<INT name="stop" perpetual="0" />			</PG>			<PG name="showMe">				<DIS textColour="#333333" name="instructions" x="90" y="460" w="760" h="10" type="text"><![CDATA[<font size="10"><b>Use the arrows to learn more.</b></font>]]></DIS>				<SCR name="setup"><![CDATA[//only create one label for each group, so keep track of group namesgroups = new Object();labels = new Array();for (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){// && draw.shapes[i].label != ""){        addShape = true; //a flag        //we have shape - in a group?    if (draw.shapes[i].group != ''){      if (groups[draw.shapes[i].group] == undefined){ //we dont have this group yet        groups[draw.shapes[i].group] = true;      } else {        addShape = false; //we know about this group already      }    }       if (addShape == true){      temp = new Object();        temp.label = draw.shapes[i].label;      temp.info = draw.shapes[i].info;      temp.shape = draw.shapes[i];      temp.group = draw.shapes[i].group;      labels.push(temp);    }  }}acIndex = 0;]]></SCR>				<INT name="interaction" perpetual="0">					<RES swf="templatePath + 'common/leftButton.swf'" name="back" type="button" x="40" y="460" label="Back" erase="1" exit="0">						<SCR name="showPrev"><![CDATA[acIndex--;if (acIndex == -1){  acIndex = labels.length - 1;}//hide previousfor (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image'){    draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,hCol,0);  }}labels[acIndex].shape.alpha = 100;labels[acIndex].shape.refreshShape(lw,hCol,100,hCol,40);//find any other shapes in this groupgrp = labels[acIndex].group;if (grp != ''){  for (i = 0; i < draw.shapes.length; i++){    if (draw.shapes[i].group == grp){      draw.shapes[i].refreshShape(lw,hCol,100,hCol,40);    }  }}fb.setText('<b>' + labels[acIndex].shape.label + '</b><br>' + labels[acIndex].shape.info);fb.beginFill(0xFFFFCC,100);fb.lineStyle(1,0x333333,100);fb.drawRect(0,0,260,474 - fb._y);]]></SCR>					</RES>					<RES swf="templatePath + 'common/rightButton.swf'" name="next" type="button" x="65" y="460" label="next" erase="1" exit="0">						<SCR name="showNext"><![CDATA[acIndex++;if (acIndex == labels.length){  acIndex = 0;}//hide previousfor (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image'){    draw.shapes[i].refreshShape(lw,hCol,shapeAlpha,hCol,0);  }}labels[acIndex].shape.alpha = 100;labels[acIndex].shape.refreshShape(lw,hCol,100,hCol,40);//find any other shapes in this groupgrp = labels[acIndex].group;if (grp != ''){    for (i = 0; i < draw.shapes.length; i++){    if (draw.shapes[i].group == grp){      draw.shapes[i].refreshShape(lw,hCol,100,hCol,40);    }  }}fb.setText('<b>' + labels[acIndex].shape.label + '</b><br>' + labels[acIndex].shape.info);fb.beginFill(0xFFFFCC,100);fb.lineStyle(1,0x333333,100);fb.drawRect(0,0,260,474 - fb._y);]]></SCR>					</RES>				</INT>			</PG>			<PG name="MCQ">				<SCR name="hideShapes"><![CDATA[//hide the shapesfor (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){    draw.shapes[i]._alpha = 0;  }}]]></SCR>				<SCR name="makeQuestions"><![CDATA[labels = new Array();for (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){// && draw.shapes[i].label != ""){    temp = new Object();    temp.label = draw.shapes[i].label;    temp.info = draw.shapes[i].info;    temp.shape = draw.shapes[i];    labels.push(temp);  }}//create the interactionsif (icon.built != "true"){  icon.nextSibling.firstChild.duplicate(labels.length - 1);  icon.built = "true";}score = 0;count = 0;]]></SCR>				<DEC id="quizDec" name="questions" repeat="all" branch="randomUnused" pause="0" erase="1" eraseOnExit="1">					<PG name="protoQuestion">						<DIS name="orient" x="txt._x" y="txt._y + txt._height + 20" w="400" h="10" type="text"><![CDATA[{'<b>Question ' + quizDec.repCount + ' of ' + labels.length + '</b>'}]]></DIS>						<DIS id="feedback" name="feedback" x="txt._x" y="txt._y + txt._height + 60" w="txt._width" h="10" type="text"><![CDATA[]]></DIS>						<SCR name="highlightShape"><![CDATA[//hide the shapesfor (i = 0; i < draw.shapes.length; i++){  if (draw.shapes[i].type != 'image' && draw.shapes[i].type != 'line'){    draw.shapes[i]._alpha = 0;  }}count++;q = icon.parentNode.index();labels[q].shape._alpha = 100;labels[q].shape.refreshShape(lw,hCol,100,lc,40);//add the right answer and 3 wrong answers to the question, randomlyanswersArray = new Array();answersArray.push(labels[q].label);while (answersArray.length < 4){  randomIndex = Math.floor(Math.random() * labels.length);  randomTerm = labels[randomIndex].label;  if (answersArray.findValue(randomTerm) == -1){    answersArray.push(randomTerm);  }}answersArray.randomize();//mark the right answer as correctfor (i = 0; i < answersArray.length; i++){  if (answersArray[i] == labels[q].label){    icon.nextSibling.childNodes[i + 1].attributes.correct = 1;  } else {    icon.nextSibling.childNodes[i + 1].attributes.correct = 0;  }}option = "";]]></SCR>						<INT id="mcq" name="interaction" perpetual="0">							<RES name="prompt" type="label" x="txt._x" y="txt._y + txt._height + 40" w="txt._width" h="10" text="Which item is highlighted in the diagram? Choose from the following options" />							<RES rs="op1" correct="0" name="option1" type="radio" x="icon.previousSibling.clip()._x" y="_ytile + 20" label="{answersArray[0]}" group="grp" erase="1" exit="0">								<SCR name="getOption"><![CDATA[option = answersArray[0];]]></SCR>							</RES>							<RES rs="op2" name="option2" correct="0" type="radio" x="icon.previousSibling.clip()._x" y="_ytile + 10" label="{answersArray[1]}" group="grp" erase="1" exit="0">								<SCR name="getOption"><![CDATA[option = answersArray[1];]]></SCR>							</RES>							<RES rs="op3" correct="0" name="option3" type="radio" x="icon.previousSibling.clip()._x" y="_ytile + 10" label="{answersArray[2]}" group="grp" erase="1" exit="0">								<SCR name="getOption"><![CDATA[option = answersArray[2];]]></SCR>							</RES>							<RES rs="op4" correct="0" name="option4" type="radio" x="icon.previousSibling.clip()._x" y="_ytile + 10" label="{answersArray[3]}" group="grp" erase="1" exit="0">								<SCR name="getOption"><![CDATA[option = answersArray[3];]]></SCR>							</RES>							<RES rs="btnCheck" swf="templatePath + 'common/button.swf'" name="check" type="button" x="icon.previousSibling.clip()._x" y="_ytile + 10" label="Check" erase="1" exit="0">								<SCR name="judge"><![CDATA[feedback._y = op4._y + 60;  if (option != ""){    if (mcq.judge() == true){    feedback.setText("That's right. Move on to the next question.");    score++;      } else {      //highlight the option they selected    feedback.setText("No. The " + option + " is highlighted green. The correct answer is the " + labels[q].label + ".<br><br>Move on to the next question.");    for (i = 0; i < labels.length; i++){      if (labels[i].label == option){        labels[i].shape._alpha = 100;        labels[i].shape.refreshShape(2,0x00FF00,100,0x00FF00,40);        break;      }    }  }  op1.setEnabled(false);  op2.setEnabled(false);  op3.setEnabled(false);  op4.setEnabled(false);  btnCheck.setEnabled(false);  btnNext.setEnabled(true);} else {  feedback.setText("You haven't selected an option.");}]]></SCR>							</RES>							<RES rs="btnNext" enabled="0" swf="templatePath + 'common/button.swf'" name="moveOn" type="button" x="icon.previousSibling.clip()._x" y="454" label="Next" erase="1" exit="1">								<SCR name="next"><![CDATA[if (count == labels.length){  quizDec.exit();}]]></SCR>							</RES>						</INT>					</PG>				</DEC>				<DIS name="feedback" x="txt._x" y="txt._y + txt._height + 20" w="txt._width" h="10" type="text"><![CDATA[{'<b>Score</b><br>You scored ' + score + ' out of ' + icon.previousSibling.childNodes.length + ' in the quiz. <br><br>You can retake the quiz at any time.'}]]></DIS>			</PG>		</FW>	</PG>